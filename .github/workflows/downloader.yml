name: downloader

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    environment: universe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.3.0

      - name: Setup Deno
        uses: denoland/setup-deno@v1.1.1
        with:
          deno-version: v1.x

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE }}
          token: ${{ secrets.PAT }}

      - name: Setup yt-dlp
        uses: AnimMouse/setup-yt-dlp@v1
        with:
          # Install FFmpeg for yt-dlp
          with-ffmpeg: true
          # yt-dlp version
          #version: # optional, default is latest
          # GitHub token to avoid API rate limiting
          token: ${{ secrets.PAT }}

      - run: |
          deno run -A ./link.ts 0 10
          cd ./link/original
          for file in *;
          do
            cd "./${file}";
            yt-dlp --downloader aria2c -a "./${file}.txt";
            cd ..;
          done;
          cd ../..
          deno run -A ./assemble.ts
          cd ./link/
          rclone copy original/ goo:/wjsn/
          cd ..
          rm -r ./link

          deno run -A ./link.ts 10 20
          cd ./link/original
          for file in *;
          do
            cd "./${file}"
            yt-dlp --downloader aria2c -a "./${file}.txt"
            cd ..
          ;
          done;
          cd ../..
          deno run -A ./assemble.ts
          cd ./link/
          rclone copy original/ goo:/wjsn/
          cd ..
          rm -r ./link

          deno run -A ./link.ts 20 30
          cd ./link/original
          for file in *;
          do
            cd "./${file}"
            yt-dlp --downloader aria2c -a "./${file}.txt"
            cd ..
          ;
          done;
          cd ../..
          deno run -A ./assemble.ts
          cd ./link/
          rclone copy original/ goo:/wjsn/
